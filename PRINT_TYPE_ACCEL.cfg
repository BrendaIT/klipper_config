# based (extremely, extremely heavily) on https://discord.com/channels/460117602945990666/460172848565190667/890777587507396648 
# https://github.com/geoffrey-young/3D-Printing/blob/main/klipper/voron/2.4/macros/PRINT_TYPE_ACCEL.cfg
#
# major kudos to @VintageGriffin for taking the time to distill the floating discord and github knowledge into a functional macro

# Allows finer grained acceleration control for different types of print moves than those provided by SuperSlicer.
#
# Usage:
#
#  In SuperSlicer:
#
#    Make sure dynamic acceleration control under "Print settings" -> "Acceleration control" is disabled (e.g all values set to 0, even the greyed out ones).
#    Setting "Machine limits" under "Printer settings" does not interfere with this macro.
#    Paste the following into the "Printer settings" -> "Extrusion role change G-code" section.
#
#      SET_PRINT_TYPE_ACCEL TYPE=[extrusion_role] LAYER=[layer_num]
#
#  Then in your klipper set the different print moves to an appropriate value:
#
#    SET_ACCEL_FOR_TYPE TYPE=Default                  VALUE=3000  #  default acceleration value if the print move is not provided or not recognized
#    SET_ACCEL_FOR_TYPE TYPE=FirstLayer               VALUE=1500  #  all print moves on first layer will be done with this acceleration
#
#    SET_ACCEL_FOR_TYPE TYPE=ExternalPerimeter        VALUE=1500  #  slow down here to get less surface artefacts
#    SET_ACCEL_FOR_TYPE TYPE=ThinWall                 VALUE=1500  #  sections of walls one perimeter thick
#    SET_ACCEL_FOR_TYPE TYPE=Perimeter                VALUE=3000
#    SET_ACCEL_FOR_TYPE TYPE=OverhangPerimeter        VALUE=1500  #  overhangs, and perimeters on external bridges
#
#    SET_ACCEL_FOR_TYPE TYPE=BridgeInfill             VALUE=3000  #  external (on actual bridges) and internal (supporting bridging layer above sparse infill)
#    SET_ACCEL_FOR_TYPE TYPE=TopSolidInfill           VALUE=1500  #  solid infill on top layer. slow down here to get less surface artefacts
#    SET_ACCEL_FOR_TYPE TYPE=SolidInfill              VALUE=7000  #  solid internal infill
#    SET_ACCEL_FOR_TYPE TYPE=InternalInfill           VALUE=7000  #  sparse internal infill
#
#    SET_ACCEL_FOR_TYPE TYPE=GapFill                  VALUE=1500  #  space constrained between two outer extrusions, larger than one but thinner than two extrusion widths
#    SET_ACCEL_FOR_TYPE TYPE=Skirt                    VALUE=3000
#
#    SET_ACCEL_FOR_TYPE TYPE=SupportMaterial          VALUE=3000
#    SET_ACCEL_FOR_TYPE TYPE=SupportMaterialInterface VALUE=3000
#    SET_ACCEL_FOR_TYPE TYPE=WipeTower                VALUE=3000
#
#  Additionally, you can set the travel velocity via
#
#    SET_ACCEL_FOR_TYPE TYPE=Travel VALUE=7000
#
#  There are no specific travel moves indicicated by SuperSlicer, but this is a useful setting when combined with
#
#    https://github.com/geoffrey-young/3D-Printing/blob/main/superslicer/voron/2.4/override_travel_velocity.pl
#
#  All unspecified moves are set to 3000 by default.
#
#  You can increase the amount of debug output via
#
#    SET_ACCEL_FOR_TYPE_VERBOSITY LEVEL=2
#
# For perspective, the Voron cube at .2mm layers has this (approximate) distribution:
#
#    980 ExternalPerimeter
#    804 OverhangPerimeter
#    743 InternalInfill
#    548 GapFill
#    402 Perimeter
#    388 SolidInfill
#     10 BridgeInfill
#      7 TopSolidInfill
#      6 FirstLayer
#
# Known issues:
#   All "service" moves like travel, wipe, z-hop and internal moves between individual extrusions will be done with the acceleration of the print move that preceeded them.
#   There is currently no known way to specify travel move acceleration separately from others (e.g as in SuperSlicer's "travel" acceleration) in a way that would not interfere
#   or reset the values for the given print moves almost immediately.



[gcode_macro SET_ACCEL_FOR_TYPE]
gcode:
  {% set move = params.TYPE|default('Default')|string %}
  {% set accel = params.VALUE|default(3000)|int %}

  SET_GCODE_VARIABLE MACRO=SET_PRINT_TYPE_ACCEL VARIABLE={move.lower()} VALUE={accel}
  { action_respond_info("SET_PRINT_TYPE_ACCEL: Print move type %s set to accel %d" % (move, accel)) }


[gcode_macro SET_ACCEL_FOR_TYPE_VERBOSITY]
gcode:
  {% set level = params.LEVEL|default(0)|int %}
  SET_GCODE_VARIABLE MACRO=SET_PRINT_TYPE_ACCEL VARIABLE=verbosity VALUE={level}
  { action_respond_info("SET_PRINT_TYPE_ACCEL: verbosity set to level %d" % (level)) }

[gcode_macro SET_PRINT_TYPE_ACCEL]
variable_default: 3000
variable_firstlayer: 3000
variable_externalperimeter: 3000
variable_thinwall: 3000
variable_perimeter: 3000
variable_overhangperimeter: 3000
variable_bridgeinfill: 3000
variable_topsolidinfill: 3000
variable_solidinfill: 3000
variable_internalinfill: 3000
variable_gapfill: 3000
variable_skirt: 3000
variable_supportmaterial: 3000
variable_supportmaterialinterface: 3000
variable_wipetower: 3000
variable_verbosity: 0
variable_travel: 3000
variable_layer: 0
gcode:

  {% set move = params.TYPE|string %}
  {% set layer = params.LAYER|default(printer['gcode_macro SET_PRINT_TYPE_ACCEL']['layer'])|int %}  # layers start at 1
  {% set verbose = params.VERBOSE|default(printer['gcode_macro SET_PRINT_TYPE_ACCEL']['verbosity'])|int %}

  {% set accelerations = ([
    'Default',
    'FirstLayer',
    'Travel',
    'ExternalPerimeter',
    'ThinWall',
    'Perimeter',
    'OverhangPerimeter',
    'BridgeInfill',
    'TopSolidInfill',
    'SolidInfill',
    'InternalInfill',
    'GapFill',
    'Skirt',
    'SupportMaterial',
    'SupportMaterialInterface',
    'WipeTower',
  ]) %}

  # keep track for travel overrides
  SET_GCODE_VARIABLE MACRO=SET_PRINT_TYPE_ACCEL VARIABLE=layer VALUE={layer}

  {% if layer == 1 %}
    # override all accelerations for first layer

    {% if verbose > 1 %}
      {action_respond_info('SET_PRINT_TYPE_ACCEL: Overriding print move "%s" to use FirstLayer accelerations.' % (move))}
    {% endif %}

    {% set move = 'FirstLayer' %}
    #
  {% endif %}

  {% if move not in accelerations %}
    # use the default acceleration for unknown print moves, or when print move was not provided
    {% if verbose > 0 %}
      {action_respond_info('SET_PRINT_TYPE_ACCEL: Unknown print move "%s", or print move not provided. Using default acceleration.' % (move))}
    {% endif %}

    {% set move = 'Default' %}
  {% endif %}

  # get acceleration value from above table
  {% set accel = printer['gcode_macro SET_PRINT_TYPE_ACCEL'][move.lower()]|int %}
  # half the acceleration value as per Klipper docs
  {% set accel_to_decel = (accel / 2)|int %}

  {% if verbose > 0 %}
    {action_respond_info('SET_PRINT_TYPE_ACCEL: Changing acceleration for print move "%s" at layer %d to accel: %d, accel_to_decel: %d' % (move, layer, accel, accel_to_decel))}
  {% endif %}

  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}


[gcode_macro DUMP_ACCELS]
gcode:

  {% for k,v in printer['gcode_macro SET_PRINT_TYPE_ACCEL'].items() %}
    { action_respond_info("SET_PRINT_TYPE_ACCEL: %s = %d" % (k, v)) }
  {% endfor %}
    


# back compat
# SET_PRINT_MOVE_ACCEL MOVE=Perimeter LAYER_NUM=174 VERBOSE=1
[gcode_macro SET_PRINT_MOVE_ACCEL]
gcode:
  {% set move = params.MOVE|string %}
  {% set layer = params.LAYER_NUM|default(0)|int %}
  {% set verbose = params.VERBOSE|default(1)|int %}

  SET_PRINT_TYPE_ACCEL TYPE={move} LAYER={layer} VERBOSE={verbose}